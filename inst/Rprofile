# Use private package library
local({
  # Create the private package library if it doesn't already exist
  appRoot <- normalizePath('.', winslash='/')
  libRoot <- file.path(appRoot, 'library')
  localLib <- file.path(libRoot, R.version$platform, getRversion())
  newLocalLib <- FALSE
  if (!file.exists(localLib)) {
    message('Creating private package library at ', localLib)
    dir.create(localLib, recursive=TRUE)
    newLocalLib <- TRUE
  }

  # If there's a new library (created to make changes to packages loaded in the
  # last R session), remove the old library and replace it with the new one. 
  newLibRoot <- file.path(appRoot, 'library.new', 'library')
  if (file.exists(newLibRoot)) {
    message('Applying Packrat library updates ... ', appendLF = FALSE)
    suceeded <- FALSE
    if (file.rename(libRoot, file.path(appRoot, 'library.old'))) {
      if (file.rename(newLibRoot, libRoot)) {
        succeeded <- TRUE
      } else {
        # Moved the old library out of the way but couldn't move the new 
        # in its place; move the old library back 
        file.rename(file.path(appRoot, 'library.old'), libRoot)
      }
    }
    if (succeeded) {
      message('OK')
    } else {
      message('FAILED')
      message("Packrat was not able to make changes to its local library at ", 
              localLib, ". Check this directory's permissions and run ",
              "packrat::restore() to try again.")
    }
  }
  
  # If the new library temporary folder exists, remove it now so we don't
  # attempt to reapply the same failed changes 
  if (file.exists(file.path(appRoot, 'library.new'))) {
    file.remove(file.path(appRoot, 'library.new'), recursive = TRUE)
  }
  if (file.exists(file.path(appRoot, 'library.old'))) {
    file.remove(file.path(appRoot, 'library.old'), recursive = TRUE)
  }
  
  .libPaths(localLib)

  # Bootstrap the installation of devtools and packrat
  if (newLocalLib) {
    if (length(find.package('packrat', lib.loc = localLib, quiet = TRUE)) == 0) {
      # TODO: Uncomment when we get onto CRAN
      # utils::install.packages('packrat', repos=c(CRAN='http://cran.rstudio.com/'))
    }
  }
})
